// Generated by `wit-bindgen` 0.29.0.

///| `handle` handles all incoming requests.
/// `GET /kv-store/:key` returns the value associated with `:key` or `404 Not Found`.
/// `POST /kv-store/:key` saves the body as the value for `:key` in the kv-store
/// for later retrieval.
pub fn handle(
  request : @types.IncomingRequest,
  response_out : @types.ResponseOutparam
) -> Unit {
  let store = match @keyValue.Store::open("default") {
    Ok(store) => store
    _ => return @util.respond_500(response_out)
  }
  let response = (match @util.split_path(request) {
      (@types.Get, ["kv-store", key]) => handle_get(store, key)
      (@types.Post, ["kv-store", key]) => handle_post(store, key, request)
      _ => return @util.respond_404(response_out)
    })
    |> Ok
  response_out.set(response)
}

///|
fn handle_get(store : @keyValue.Store, key : String) -> @types.OutgoingResponse {
  match store.get(key) {
    Ok(Some(value)) =>
      @util.make_response(value, content_type=b"application/octet-stream")
    _ => @util.make_404_response()
  }
}

///|
fn handle_post(
  store : @keyValue.Store,
  key : String,
  request : @types.IncomingRequest
) -> @types.OutgoingResponse {
  let value = match @util.get_body_bytes(request) {
    Ok(body) => body
    _ => return @util.make_500_response()
  }
  match store.set(key, value) {
    Ok(_) => @util.make_response(b"OK")
    _ => @util.make_404_response()
  }
}
